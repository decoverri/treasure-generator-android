package com.decoverri.treasuregenerator.helper.view;

import android.support.v4.app.FragmentActivity;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

import com.decoverri.treasuregenerator.R;
import com.decoverri.treasuregenerator.fragment.ResultFragment;
import com.decoverri.treasuregenerator.helper.ResourceHelper;
import com.decoverri.treasuregenerator.model.Treasure;
import com.decoverri.treasuregenerator.model.dto.GenerationResult;
import com.decoverri.treasuregenerator.model.dto.TypeValue;

import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;

/**
 * Created by decoverri on 08/03/16.
 */
public class ResultHelper {
    private ResultFragment fragment;

    private NumberFormat formatter;

    private TextView title;
    private TableLayout table;

    private TypeValue typeValue;
    private List<Treasure> treasures;
    private String formattedTotal;

    public ResultHelper(View view, ResultFragment fragment) {
        this.fragment = fragment;

        formatter = NumberFormat.getNumberInstance(Locale.US);

        title = (TextView) view.findViewById(R.id.result_title);
        table = (TableLayout) view.findViewById(R.id.result_table);
    }

    private String getFormattedTotal(List<Treasure> treasures) {
        double total = 0;
        for (Treasure treasure : treasures) {
            total += treasure.getValue();
        }
        return formatter.format(total) + " gp";
    }

    public void fillData(LayoutInflater inflater, ViewGroup container, GenerationResult result) {
        typeValue = result.getTypeValue();
        treasures = result.getTreasures();

        formattedTotal = getFormattedTotal(result.getTreasures());

        setTitle();
        fillResultTable(inflater, container);
    }

    public void setTitle() {
        String message = "Result for " + formatter.format(typeValue.getValue()) + " gp of "
                + typeValue.getTypeName();

        FragmentActivity activity = fragment.getActivity();
        new ResourceHelper(activity).getTreasureColor(typeValue.getTypeLetter());
        title.setTextColor(new ResourceHelper(activity).getTreasureColor(typeValue.getTypeLetter()));

        title.setText(message);
    }

    public void fillResultTable(LayoutInflater inflater, ViewGroup container) {

        int index = 0;
        for (Treasure treasure : treasures) {
            TableRow row = (TableRow) inflater.inflate(R.layout.result_row, container, false);

            if(index % 2 != 0){
                row.setBackgroundColor(ContextCompat.getColor(fragment.getActivity(), R.color.result_even_color));
            }
            index++;

            TextView name = (TextView) row.findViewById(R.id.result_name);
            name.setText(treasure.getName());

            TextView value = (TextView) row.findViewById(R.id.result_value);
            value.setText(treasure.getFormattedValue());

            table.addView(row);
        }

        TableRow row = (TableRow) inflater.inflate(R.layout.result_row, container, false);
        row.setBackgroundColor(ContextCompat.getColor(fragment.getActivity(), R.color.result_footer));

        TextView name = (TextView) row.findViewById(R.id.result_name);
        name.setText("Total:");

        TextView value = (TextView) row.findViewById(R.id.result_value);
        value.setText(formattedTotal);

        table.addView(row);

    }

    public String getShareableResult() {
        StringBuilder builder = new StringBuilder();
        builder.append("<p><b>" + formatter.format(typeValue.getValue()) + " gp of Type " + typeValue.getTypeName() + ":</b></p>");
        for (Treasure treasure : treasures) {
            builder.append(treasure.getName() + " - " + treasure.getFormattedValue() + ";<br/>");
        }
        builder.append("<p><b>Total: " + formattedTotal + "</b></p>");
        builder.append("<p><small>Generated by Treasure Generator for Pathfinder</small></p>");
        return builder.toString();
    }
}
